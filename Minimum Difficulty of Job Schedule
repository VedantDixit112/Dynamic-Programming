class Solution {
    int [][]dp=new int[301][11];
     public int minDifficulty(int[] jobDifficulty, int d) {
  	if (d > jobDifficulty.length) return -1;
      for(int i=0;i<dp.length;i++){
          for(int j=0;j<dp[i].length;j++){
              dp[i][j]=-1;
          }
      }
  	return f(jobDifficulty, 0, d);	
  }

  private int f(int[] array, int start, int d) {
  	if(d == 1) {
  		int max = 0;
  		while(start < array.length) max = Math.max(max, array[start++]);
  		return max;
      }
      if(dp[start][d]!=-1){
          return dp[start][d];
      }
  	int max  = 0;
  	int r = Integer.MAX_VALUE;

  	for (int i = start; i <= array.length - d; i++) {
  		max = Math.max(max, array[i]);
  		r = Math.min(r, max + f(array, i + 1, d - 1));
  	}
  	return dp[start][d]=r;
  }
}
